1. 2nd largest without sorting

declare -a numbers=()

for i in $( seq 0 9 );
do
	x=$((RANDOM%900+100))
	numbers[$i]=$x
done

fbig=${numbers[1]}
sbig=$fbig
ssml=$fbig

for i in $( seq 0 9 );
do
	if [ $fbig -le ${numbers[$i]} ];
	then
		sbig=$fbig
		fbig=${numbers[$i]}
	elif [ $sbig -le ${numbers[$i]} ];
	then
		sbig=${numbers[$i]}
	fi
done


for i in $( seq 0 9 );
do
        if [ $fbig -ge ${numbers[$i]} ];
        then
                ssml=$fbig
                fbig=${numbers[$i]}
	elif [ $ssml -ge ${numbers[$i]} ];
        then
                ssml=${numbers[$i]}
        fi
done


echo ${numbers[@]}
echo $sbig "is the second highest value."
echo $ssml "is the second lowest value."

2. 2nd largest number with sorting

declare -a numbers=()

for i in $( seq 0 9 );
do
        x=$((RANDOM%900+100))
        numbers[$i]=$x
done

echo ${numbers[@]}

for ((i=0; i<10; i++));
do
	for ((j=$i; j<10; j++));
	do
		if [ ${numbers[$i]} -gt ${numbers[$j]} ];
		then
			temp=${numbers[$i]}
			numbers[$i]=${numbers[$j]}
			numbers[$j]=$temp
		fi
	done
done

echo ${numbers[@]}
echo ${numbers[8]} "is the second highest value."
echo ${numbers[1]} "is the second lowest value."
3. Prime factorization
declare -a array
read -p "enter the number" num
p=0
while [ $(($num % 2)) -eq 0 ]
do
  p=1
  num=$(($num / 2))
done
if [ $p -eq 1 ]
  then
    array=(${array[@]} 2)
fi
for ((i=3;i*i<=$num;i+=2))
do
  q=0
  while [ $(($num % $i)) -eq 0 ]
  do
    q=1
    num=$(($num / i))
  done
  if [ $q -eq 1 ]
    then
      array=(${array[@]} $i)

  fi

done
if [ $num -gt 2 ]
  then
    array=(${array[@]} $num)
fi
echo "Prime factors: " ${array[@]}
4.read -p "Enter the array : " array
declare -a array=$array
declare -a result
while [ ${#array[@]} -lt 3 ]
do
  read -p "enter the array with atleast 3 elements: " array
  declare -a array=$array

done
for((i=0;i<$((${#array[@]}-2));i++))
do
  for((j=$(($i+1));j<$((${#array[@]}-1));j++))
  do
    for((k=$(($j+1));k<$((${#array[@]}));k++))
    do
      if [ $((${array[$i]} + ${array[$j]} + ${array[$k]})) -eq 0 ]
      then
        result=(${result[@]} `echo "[" ${array[$i]} ${array[$j]} ${array[$k]} "]"`)
      fi
    done

  done

done
echo ${result[@]}

5.declare -a array
for((i=1;i<=100;i++))
do
  if [ $(($i/10)) -eq $(($i%10)) ]
  then
    array=(${array[@]} $i)
  fi
done
echo "Result : " ${array[@]}